# nicolasm bash preferences

set -o vi

export BASH_SILENCE_DEPRECATION_WARNING=1
export CLICOLOR=1
export EDITOR=nvim
export LANG=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

export PATH=/usr/local/bin:/usr/local/sbin:$HOME/bin:$PATH
export PATH=/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin:$PATH

# don't put duplicate lines in the history. See bash(1) for more options
export HISTSIZE=10000
export HISTFILESIZE=10000
export HISTCONTROL=ignoreboth
export HISTIGNORE="fg*"
export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S"
shopt -s histappend
export PROMPT_COMMAND='history -a'

export IGNOREEOF=1 # Prevent logout on the first CTRL-D
set completion-prefix-display-length 2


# Prompt
function git_parse_branch {
    git status -b --porcelain 2> /dev/null | awk 'NR==1{split($2, name, /\./); printf "[" name[1]} NR==2{printf "*"; exit} END{if (name[1]) print "]"}'
}

if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]$(git_parse_branch)\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w$(git_parse_branch)\$ '
fi


export GREP_OPTIONS="--exclude-dir=__pycache__ --exclude-dir=node_modules"


# Binding and Aliases
[[ -f ~/.bash_bindings ]] && source ~/.bash_bindings
alias clearspaces="sed 's/[ \\t]*$//'"
alias diff="colordiff -u"
alias less='less -r'
alias median='python -c "import sys; l = [int(i) for l in sys.stdin for i in l.split()]; l = sorted(l); c = len(l); middle = int(c / 2); print(l[middle] if c % 2 else (l[middle] + l[middle + 1]) / 2);"'
alias sbcl="rlwrap sbcl"
alias tmux="tmux -2"
alias vim='nvim'
alias vi='nvim'
alias vimdiff="nvim -d"
alias wdiff='wdiff -w "$(tput bold;tput setaf 1)" -x "$(tput sgr0)" -y "$(tput bold;tput setaf 2)" -z "$(tput sgr0)"'
alias tmux-reset="stty sane; printf '\033k%s\033\\\033]2;%s\007' "$(basename "$SHELL")" "$(uname -n)"; tput reset; tmux refresh"


# Python stuff
export PYTHONSTARTUP=~/.pythonrc.py
# if [ -f /usr/local/bin/virtualenvwrapper.sh ]; then
#     export WORKON_HOME=$HOME/.virtualenvs
#     export VIRTUALENVWRAPPER_LOG_DIR="$WORKON_HOME"
#     export VIRTUALENVWRAPPER_HOOK_DIR="$WORKON_HOME"
#     source /usr/local/bin/virtualenvwrapper.sh
#     [[ -f ~/.virtualenv_current ]] && workon $(cat ~/.virtualenv_current)
# fi

export PYTHON_CONFIGURE_OPTS="--enable-framework"  # Needed by YouCompleteMe
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"


# Go stuff
export GOPATH=~/Work/Go
export PATH=$GOPATH/bin:/usr/local/opt/go@1.8/bin:$PATH:/usr/local/opt/go/libexec/bin


# Google Cloud
export CLOUDSDK_PYTHON=/usr/bin/python
if [ -f /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc ]; then
    source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.bash.inc
fi
source <(kubectl completion bash)


# Postgres Stuff
export PGHOST=localhost
export PGDATABASE=prose_dev


# Brew stuff
brew=$(which brew)
if [ -e $brew ]; then
    if [ -f $(brew --prefix)/etc/bash_completion ]; then
        source $(brew --prefix)/etc/bash_completion
    fi
fi

export SONAR_HOME=/usr/local/Cellar/sonar-scanner/4.4.0.2170/libexec
export SONAR=$SONAR_HOME/bin
export PATH=$SONAR:$PATH

export PIP_EXTRA_INDEX_URL=https://prose:jyEYe6-xty36v@pypi.prose.com
